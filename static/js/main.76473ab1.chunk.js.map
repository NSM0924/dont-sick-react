{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","auth","getAuth","messaging","getMessaging","useState","token","setToken","email","setEmail","name","setName","userId","setUserId","admin","setAdmin","useEffect","onAuthStateChanged","user","console","log","displayName","includes","substr","alert","signOut","navigator","serviceWorker","register","then","reg","getToken","serviceWorkerRegistration","vapidKey","currentToken","catch","err","error","provider","GoogleAuthProvider","setCustomParameters","login_hint","signInWithRedirect","onMessage","payload","Notification","permission","icon","body","data","message","sendToTopic","msg","topic","fetch","method","headers","Headers","Authorization","JSON","stringify","to","response","status","Error","text","database","getDatabase","notice_db","ref","isChecked2","setIsChecked2","notice_db_data","useCallback","onValue","snapshot","val","subscribeTokenToTopic","registration_tokens","unsubscribeTokenToTopic","style","display","justifyContent","alignItems","height","path","exact","component","on_off_db","on_off_data","set_on_off_data","isChecked","setIsChecked","on_off_db_data","className","src","alt","width","marginBottom","id","checked","onChange","set","type","textAlign","onClick","checkPaper_data","setCheckPaper_data","checkPaper_db","getFirestore","checkPaper_db_data","a","postData","getDocs","collection","forEach","doc","push","post","prevPosts","concat","map","grade","classResult","nameResult","time","symptom","date","document","querySelector","getElementById","innerHTML","addEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.76473ab1.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDugiSdAbhcAv4kjvZIczRILR0cWnyoLE4\",\n  authDomain: \"don-t-sick.firebaseapp.com\",\n  projectId: \"don-t-sick\",\n  storageBucket: \"don-t-sick.appspot.com\",\n  messagingSenderId: \"713607862724\",\n  appId: \"1:713607862724:web:5ada0cc3cdaa6370662c91\",\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\n","import \"./App.css\";\nimport {\n  getAuth,\n  signInWithRedirect,\n  GoogleAuthProvider,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { getDatabase, onValue, ref, set } from \"firebase/database\";\nimport { collection, getDocs, getFirestore } from \"firebase/firestore\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\nimport { app } from \"./firebase\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport \"./css/menu.css\";\nimport \"./css/SettingPage.css\";\nimport \"./css/HomePage.css\";\nimport \"./css/CheckPaperPage.css\";\nimport \"./css/modal.css\";\n\nfunction App() {\n  const auth = getAuth(app);\n  const messaging = getMessaging();\n  const [token, setToken] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [admin, setAdmin] = useState(false);\n\n  useEffect(() => {\n    // 로그인한 사용자 가져오기\u001c\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        console.log(user);\n        let email = user.email;\n        setEmail(email);\n        setName(user.displayName);\n        setUserId(\n          email.includes(\"sdh20\") ? email.substr(0, 11) : email.substr(0, 9)\n        );\n        // 학교 계정이 아니면 다시 로그인\n        if (!email.includes(\"@sdh.hs.kr\")) {\n          alert(\"학교계정으로만 로그인 가능합니다.\");\n          signOut(auth);\n          return;\n        }\n        if (email == \"sdh20200405@sdh.hs.kr\" || email == \"shinem@sdh.hs.kr\") {\n          setAdmin(true);\n        }\n\n        // 알림 토큰 저장\n        if (navigator.serviceWorker) {\n          navigator.serviceWorker\n            .register(\"/dont-sick-react/firebase-messaging-sw.js\")\n            .then(function (reg) {\n              console.log(\"서비스워커 등록성공 :\", reg);\n              getToken(messaging, {\n                serviceWorkerRegistration: reg,\n                vapidKey:\n                  \"BLnmZ7MoMERjyVHv4b791C7j1_-xqcVi9aCrVWDDFovZSGDgK9FROae3J8Q7AWqTJwbQDc2Dk4LrU0zAEUVqfVQ\",\n              })\n                .then((currentToken) => {\n                  if (currentToken) {\n                    console.log(currentToken);\n                    setToken(currentToken);\n                  } else {\n                    console.log(\n                      \"No registration token available. Request permission to generate one.\"\n                    );\n                    alert(\"알림 권한을 허용해주세요.\");\n                  }\n                })\n                .catch((err) => {\n                  console.log(\n                    \"An error occurred while retrieving token. \",\n                    err\n                  );\n                  alert(\"알림 권한을 허용해주세요.\");\n                });\n            })\n            .catch(function (error) {\n              console.log(\"서비스워커 등록실패 :\", error);\n            });\n        }\n      }\n      // 로그인이 안되어있으면 로그인 페이지로 이동\n      else {\n        const provider = new GoogleAuthProvider();\n\n        provider.setCustomParameters({\n          login_hint: \"sdh@sdh.hs.kr\",\n        });\n\n        signInWithRedirect(auth, provider);\n      }\n    });\n  }, [auth, messaging]);\n\n  // 포그라운드일 때 알림이 오면\n  onMessage(messaging, (payload) => {\n    console.log(\"Message received. \", payload);\n    if (Notification.permission !== \"granted\") {\n      alert(\"notification is disabled\");\n    } else {\n      var notification = new Notification(\"아프지말고\", {\n        icon: \"./images/logo.png\",\n        body: payload.data.message,\n      });\n    }\n  });\n\n  // 알림 받기 등록\n  const subscribeTokenToTopic = (token, topic) => {\n    fetch(`https://iid.googleapis.com/iid/v1/${token}/rel/topics/${topic}`, {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization:\n          \"key=AAAApiZX2cQ:APA91bGE4My7SUbJhjgtK66X8eADgEsxnBlebWlqIjfUw2YSxn43g3kZjH5mSIcHLdyH1Wfg0cwCWw8rv66tR_D2y3IyH3MCQf-9nfN4zH_SqyvqF-yOeVApflNV6bY_4SbwmgFzLKjp\",\n      }),\n    })\n      .then((response) => {\n        if (response.status < 200 || response.status >= 400) {\n          throw new Error(\n            `Error Subscribing to topic: ${\n              response.status\n            } - ${response.text()}`\n          );\n        }\n        console.log(`Subscribed to \"${topic}\"`);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  // 알림 받기 등록 취소\n  const unsubscribeTokenToTopic = (token, topic) => {\n    let body = {\n      to: `/topics/${topic}`,\n      registration_tokens: [token],\n    };\n    fetch(`https://iid.googleapis.com/iid/v1:batchRemove`, {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization:\n          \"key=AAAApiZX2cQ:APA91bGE4My7SUbJhjgtK66X8eADgEsxnBlebWlqIjfUw2YSxn43g3kZjH5mSIcHLdyH1Wfg0cwCWw8rv66tR_D2y3IyH3MCQf-9nfN4zH_SqyvqF-yOeVApflNV6bY_4SbwmgFzLKjp\",\n        \"Content-Type\": \"application/json\",\n      }),\n      body: JSON.stringify(body),\n    })\n      .then((response) => {\n        if (response.status < 200 || response.status >= 400) {\n          throw new Error(\n            `Error Unsubscribing to topic: ${\n              response.status\n            } - ${response.text()}`\n          );\n        }\n        console.log(`Unsubscribed to \"${topic}\"`);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  // 알림 받기에 등록한 사람들에게 알림 보내기\n  const sendToTopic = (msg, topic) => {\n    fetch(`https://fcm.googleapis.com/fcm/send`, {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization:\n          \"key=AAAApiZX2cQ:APA91bGE4My7SUbJhjgtK66X8eADgEsxnBlebWlqIjfUw2YSxn43g3kZjH5mSIcHLdyH1Wfg0cwCWw8rv66tR_D2y3IyH3MCQf-9nfN4zH_SqyvqF-yOeVApflNV6bY_4SbwmgFzLKjp\",\n        \"Content-Type\": \"application/json\",\n      }),\n      body: JSON.stringify({\n        data: msg,\n        to: `/topics/${topic}`,\n      }),\n    })\n      .then((response) => {\n        if (response.status < 200 || response.status >= 400) {\n          throw new Error(`Error ${response.status} - ${response.text()}`);\n        }\n        console.log(\"Success\");\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  const database = getDatabase();\n  let notice_db = ref(database, `user/${userId}/notice`);\n  const [isChecked2, setIsChecked2] = useState(false);\n  const notice_db_data = useCallback(() => {\n    onValue(notice_db, (snapshot) => {\n      const data = snapshot.val();\n      console.log(data);\n      setIsChecked2(data == \"true\");\n      if (data == \"true\") {\n        subscribeTokenToTopic(token, \"notice\");\n      } else {\n        unsubscribeTokenToTopic(token, \"notice\");\n      }\n    });\n  }, [notice_db]);\n  useEffect(() => {\n    notice_db_data();\n  }, [notice_db_data]);\n\n  function HomePage() {\n    let on_off_db = ref(database, \"on_off\");\n    const [on_off_data, set_on_off_data] = useState(\"\");\n    const [isChecked, setIsChecked] = useState(false);\n    const on_off_db_data = useCallback(() => {\n      onValue(on_off_db, (snapshot) => {\n        const data = snapshot.val();\n        console.log(data);\n        set_on_off_data(data);\n        setIsChecked(data == \"ON\");\n      });\n    }, [on_off_db]);\n    useEffect(() => {\n      on_off_db_data();\n    }, [on_off_db_data]);\n\n    const checkedHandler = () => {\n      setIsChecked(!isChecked);\n      set(on_off_db, !isChecked ? \"ON\" : \"OFF\");\n      if (!isChecked) {\n        sendToTopic({ message: \"보건실 ON🟢\" }, \"notice\");\n      } else {\n        sendToTopic({ message: \"보건실 OFF🔴\" }, \"notice\");\n      }\n    };\n\n    return (\n      <div>\n        <nav className=\"menu\">\n          <ul>\n            <li>\n              <Link to=\"/dont-sick-react/checkPaper\">보건증</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react\">홈</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/setting\">설정</Link>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container\">\n          <div className=\"box\">\n            <img src=\"dont-sick-react/images/logo.png\" alt=\"logo\" />\n            <hr style={{ width: \"100%\", marginBottom: \"50px\" }} />\n            <div className={`curcle ${on_off_data}`}></div>\n            <h2 id=\"text\" style={{ marginBottom: \"70px\" }}>\n              보건실 현재 {on_off_data}\n            </h2>\n            {admin ? (\n              <label className=\"switch-button\" style={{ marginBottom: \"50px\" }}>\n                <input\n                  checked={isChecked}\n                  onChange={checkedHandler}\n                  type=\"checkbox\"\n                  id=\"on_off_btn\"\n                />\n                <span className=\"onoff-switch\"></span>\n              </label>\n            ) : (\n              <div></div>\n            )}\n            <p>\n              코로나 의심증상: 발열, 권태감, 기침, 호흡곤란 및 폐렴 등 나타남.\n              <br />그 외 가래, 인후통, 두통, 객혈과 오심, 설사 등도 나타남.\n            </p>\n            <h2 style={{ marginBottom: \"50px\" }}>질병관리청 콜센터 1399</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function SettingPage() {\n    const checkedHandler2 = () => {\n      setIsChecked2(!isChecked2);\n      set(notice_db, !isChecked2 ? \"true\" : \"false\");\n      // if (!isChecked2) {\n      //   subscribeTokenToTopic(token, \"notice\");\n      // } else {\n      //   unsubscribeTokenToTopic(token, \"notice\");\n      // }\n    };\n\n    const logout = () => {\n      signOut(auth);\n    };\n    return (\n      <div className=\"container\">\n        <div className=\"box\">\n          <h2>계정정보</h2>\n          <p style={{ textAlign: \"left\" }}>이름: {name}</p>\n          <p style={{ textAlign: \"left\", marginBottom: \"70px\" }}>\n            이메일: {email}\n          </p>\n\n          <h2>알림 허용버튼</h2>\n          <label className=\"switch-button\" style={{ marginBottom: \"50px\" }}>\n            <input\n              checked={isChecked2}\n              onChange={checkedHandler2}\n              type=\"checkbox\"\n              id=\"on_off_btn\"\n            />\n            <span className=\"onoff-switch\"></span>\n          </label>\n\n          <h2>로그아웃하기</h2>\n\n          <button className=\"logout_btn\" onClick={logout}>\n            로그아웃하기\n          </button>\n          <nav className=\"menu\">\n            <ul>\n              <li>\n                <Link to=\"/dont-sick-react/checkPaper\">보건증</Link>\n              </li>\n              <li>\n                <Link to=\"/dont-sick-react\">홈</Link>\n              </li>\n              <li>\n                <Link to=\"/dont-sick-react/setting\">설정</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n\n  function CheckPaperPage() {\n    const [checkPaper_data, setCheckPaper_data] = useState([]);\n    const checkPaper_db = getFirestore();\n    const checkPaper_db_data = useCallback(async () => {\n      let postData = [];\n      try {\n        const querySnapshot = await getDocs(collection(checkPaper_db, userId));\n        querySnapshot.forEach((doc) => {\n          console.log(`${doc.id} => ${doc.data()}`);\n          postData.push({ post: doc.data(), id: doc.id });\n        });\n        setCheckPaper_data((prevPosts) => prevPosts.concat(postData));\n      } catch {}\n    }, [checkPaper_db]);\n    useEffect(() => {\n      checkPaper_db_data();\n    }, [checkPaper_db_data]);\n\n    function modal(grade, classResult, nameResult, time, symptom, date) {\n      document.querySelector(\".modal_wrap\").style.display = \"flex\";\n      document.querySelector(\".black_bg\").style.display = \"block\";\n      document.getElementById(\n        \"modal_text\"\n      ).innerHTML = `<p>${grade}학년 ${classResult}반 ${nameResult}</p>\n      <p>위 학생은 보건실에 ${time} ${symptom} 증상으로 다녀감을 확인 합니다.</p>\n      <p>${date}</p><p>보건교사 문서현</p>`;\n      function offClick() {\n        document.querySelector(\".modal_wrap\").style.display = \"none\";\n        document.querySelector(\".black_bg\").style.display = \"none\";\n      }\n      document\n        .querySelector(\".modal_close\")\n        .addEventListener(\"click\", offClick);\n    }\n\n    return (\n      <div>\n        <nav className=\"menu\">\n          <ul>\n            <li>\n              <Link to=\"/dont-sick-react/checkPaper\">보건증</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react\">홈</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/setting\">설정</Link>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container\">\n          <div className=\"box\">\n            <img src=\"./images/logo.png\" alt=\"\" />\n            <hr style={{ width: \"100%\", marginBottom: \"50px\" }} />\n            <h2 style={{ marginBottom: \"30px\" }}>보건실입실확인증</h2>\n            <ul className=\"mylist\">\n              {checkPaper_data.map((post) => (\n                <li\n                  key={post.id}\n                  onClick={() => {\n                    modal(\n                      post.post.grade,\n                      post.post.classResult,\n                      post.post.name,\n                      post.post.time,\n                      post.post.symptom,\n                      post.post.date\n                    );\n                  }}\n                >\n                  {post.id}\n                </li>\n              ))}\n            </ul>\n            <div className=\"black_bg\"></div>\n            <div className=\"modal_wrap\">\n              <div className=\"modal_close\"></div>\n              <div id=\"modal_text\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <Route path=\"/dont-sick-react/\" exact component={HomePage} />\n      <Route path=\"/dont-sick-react/setting\" component={SettingPage} />\n      <Route path=\"/dont-sick-react/checkpaper\" component={CheckPaperPage} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}