{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","auth","getAuth","messaging","getMessaging","useState","token","setToken","email","setEmail","name","setName","useEffect","onAuthStateChanged","user","console","log","displayName","includes","alert","signOut","navigator","serviceWorker","register","then","reg","getToken","serviceWorkerRegistration","vapidKey","currentToken","catch","err","error","provider","GoogleAuthProvider","setCustomParameters","login_hint","signInWithRedirect","onMessage","payload","Notification","permission","icon","body","data","message","sendToTopic","msg","topic","fetch","method","headers","Headers","Authorization","JSON","stringify","to","response","status","Error","text","database","getDatabase","on_off_db","ref","on_off_data","set_on_off_data","isChecked","setIsChecked","on_off_db_data","useCallback","onValue","snapshot","val","checkedHandler","set","userId","substr","notice_db","set_notice_data","isChecked2","setIsChecked2","notice_db_data","checkedHandler2","registration_tokens","unsubscribeTokenToTopic","subscribeTokenToTopic","style","display","justifyContent","alignItems","height","path","exact","component","className","src","alt","width","marginBottom","id","checked","onChange","type","textAlign","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfb679c9.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDugiSdAbhcAv4kjvZIczRILR0cWnyoLE4\",\n  authDomain: \"don-t-sick.firebaseapp.com\",\n  projectId: \"don-t-sick\",\n  storageBucket: \"don-t-sick.appspot.com\",\n  messagingSenderId: \"713607862724\",\n  appId: \"1:713607862724:web:5ada0cc3cdaa6370662c91\",\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\n","import \"./App.css\";\nimport {\n  getAuth,\n  signInWithRedirect,\n  GoogleAuthProvider,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { getDatabase, onValue, ref, set } from \"firebase/database\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\nimport { app } from \"./firebase\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport \"./css/menu.css\";\nimport \"./css/SettingPage.css\";\nimport \"./css/HomePage.css\";\n\nfunction App() {\n  const auth = getAuth(app);\n  const messaging = getMessaging();\n  const [token, setToken] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    // 로그인한 사용자 가져오기\u001c\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        console.log(user);\n        let email = user.email;\n        setEmail(email);\n        setName(user.displayName);\n        // 학교 계정이 아니면 다시 로그인\n        if (!email.includes(\"@sdh.hs.kr\")) {\n          alert(\"학교계정으로만 로그인 가능합니다.\");\n          signOut(auth);\n          return;\n        }\n\n        // 알림 토큰 저장\n        if (navigator.serviceWorker) {\n          navigator.serviceWorker\n            .register(\"/dont-sick-react/firebase-messaging-sw.js\")\n            .then(function (reg) {\n              console.log(\"서비스워커 등록성공 :\", reg);\n              getToken(messaging, {\n                serviceWorkerRegistration: reg,\n                vapidKey:\n                  \"BLnmZ7MoMERjyVHv4b791C7j1_-xqcVi9aCrVWDDFovZSGDgK9FROae3J8Q7AWqTJwbQDc2Dk4LrU0zAEUVqfVQ\",\n              })\n                .then((currentToken) => {\n                  if (currentToken) {\n                    console.log(currentToken);\n                    setToken(currentToken);\n                  } else {\n                    console.log(\n                      \"No registration token available. Request permission to generate one.\"\n                    );\n                    alert(\"알림 권한을 허용해주세요.\");\n                  }\n                })\n                .catch((err) => {\n                  console.log(\n                    \"An error occurred while retrieving token. \",\n                    err\n                  );\n                  alert(\"알림 권한을 허용해주세요.\");\n                });\n            })\n            .catch(function (error) {\n              console.log(\"서비스워커 등록실패 :\", error);\n            });\n        }\n      }\n      // 로그인이 안되어있으면 로그인 페이지로 이동\n      else {\n        const provider = new GoogleAuthProvider();\n\n        provider.setCustomParameters({\n          login_hint: \"sdh@sdh.hs.kr\",\n        });\n\n        signInWithRedirect(auth, provider);\n      }\n    });\n  }, [auth]);\n\n  // 포그라운드일 때 알림이 오면\n  onMessage(messaging, (payload) => {\n    console.log(\"Message received. \", payload);\n    if (Notification.permission !== \"granted\") {\n      alert(\"notification is disabled\");\n    } else {\n      var notification = new Notification(\"아프지말고\", {\n        icon: \"./images/logo.png\",\n        body: payload.data.message,\n      });\n\n      // notification.onclick = function () {\n      //     window.open('http://google.com');\n      // };\n    }\n  });\n\n  // 알림 받기 등록\n  const subscribeTokenToTopic = (token, topic) => {\n    fetch(`https://iid.googleapis.com/iid/v1/${token}/rel/topics/${topic}`, {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization:\n          \"key=AAAApiZX2cQ:APA91bGE4My7SUbJhjgtK66X8eADgEsxnBlebWlqIjfUw2YSxn43g3kZjH5mSIcHLdyH1Wfg0cwCWw8rv66tR_D2y3IyH3MCQf-9nfN4zH_SqyvqF-yOeVApflNV6bY_4SbwmgFzLKjp\",\n      }),\n    })\n      .then((response) => {\n        if (response.status < 200 || response.status >= 400) {\n          throw new Error(\n            `Error Subscribing to topic: ${\n              response.status\n            } - ${response.text()}`\n          );\n        }\n        console.log(`Subscribed to \"${topic}\"`);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  // 알림 받기 등록 취소\n  const unsubscribeTokenToTopic = (token, topic) => {\n    let body = {\n      to: `/topics/${topic}`,\n      registration_tokens: [token],\n    };\n    fetch(`https://iid.googleapis.com/iid/v1:batchRemove`, {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization:\n          \"key=AAAApiZX2cQ:APA91bGE4My7SUbJhjgtK66X8eADgEsxnBlebWlqIjfUw2YSxn43g3kZjH5mSIcHLdyH1Wfg0cwCWw8rv66tR_D2y3IyH3MCQf-9nfN4zH_SqyvqF-yOeVApflNV6bY_4SbwmgFzLKjp\",\n        \"Content-Type\": \"application/json\",\n      }),\n      body: JSON.stringify(body),\n    })\n      .then((response) => {\n        if (response.status < 200 || response.status >= 400) {\n          throw new Error(\n            `Error Unsubscribing to topic: ${\n              response.status\n            } - ${response.text()}`\n          );\n        }\n        console.log(`Unsubscribed to \"${topic}\"`);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  // 알림 받기에 등록한 사람들에게 알림 보내기\n  const sendToTopic = (msg, topic) => {\n    let body = {\n      to: `/topics/${topic}`,\n      data: msg,\n    };\n    fetch(`https://fcm.googleapis.com/fcm/send`, {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization:\n          \"key=AAAApiZX2cQ:APA91bGE4My7SUbJhjgtK66X8eADgEsxnBlebWlqIjfUw2YSxn43g3kZjH5mSIcHLdyH1Wfg0cwCWw8rv66tR_D2y3IyH3MCQf-9nfN4zH_SqyvqF-yOeVApflNV6bY_4SbwmgFzLKjp\",\n        \"Content-Type\": \"application/json\",\n      }),\n      body: JSON.stringify({\n        data: msg,\n        to: `/topics/${topic}`,\n      }),\n    })\n      .then((response) => {\n        if (response.status < 200 || response.status >= 400) {\n          throw new Error(`Error ${response.status} - ${response.text()}`);\n        }\n        console.log(\"Success\");\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const database = getDatabase();\n  let on_off_db = ref(database, \"on_off\");\n  const [on_off_data, set_on_off_data] = useState(\"\");\n  const [isChecked, setIsChecked] = useState(false);\n  const on_off_db_data = useCallback(() => {\n    onValue(on_off_db, (snapshot) => {\n      const data = snapshot.val();\n      console.log(data);\n      set_on_off_data(data);\n      setIsChecked(data == \"ON\");\n    });\n  }, []);\n  useEffect(() => {\n    on_off_db_data();\n  }, [on_off_db_data]);\n\n  const checkedHandler = () => {\n    setIsChecked(!isChecked);\n    set(on_off_db, !isChecked ? \"ON\" : \"OFF\");\n    if (!isChecked) {\n      sendToTopic({ message: \"보건실 ON🟢\" }, \"notice\");\n    } else {\n      sendToTopic({ message: \"보건실 OFF🔴\" }, \"notice\");\n    }\n  };\n\n  function HomePage() {\n    return (\n      <div>\n        <nav className=\"menu\">\n          <ul>\n            <li>\n              <Link to=\"/dont-sick-react/checkPaper\">보건증</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/\">홈</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/setting\">설정</Link>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container\">\n          <div className=\"box\">\n            <img src=\"images/logo.png\" alt=\"logo\" />\n            <hr style={{ width: \"100%\", marginBottom: \"50px\" }} />\n            <div className={`curcle ${on_off_data}`}></div>\n            <h2 id=\"text\" style={{ marginBottom: \"70px\" }}>\n              보건실 현재 {on_off_data}\n            </h2>\n            <label className=\"switch-button\" style={{ marginBottom: \"50px\" }}>\n              <input\n                checked={isChecked}\n                onChange={checkedHandler}\n                type=\"checkbox\"\n                id=\"on_off_btn\"\n              />\n              <span className=\"onoff-switch\"></span>\n            </label>\n            <p>\n              코로나 의심증상: 발열, 권태감, 기침, 호흡곤란 및 폐렴 등 나타남.\n              <br />그 외 가래, 인후통, 두통, 객혈과 오심, 설사 등도 나타남.\n            </p>\n            <h2 style={{ marginBottom: \"50px\" }}>질병관리청 콜센터 1399</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  let userId = email.includes(\"sdh20\")\n    ? email.substr(0, 11)\n    : email.substr(0, 9);\n  let notice_db = ref(database, `user/${userId}/notice`);\n  const [notice_data, set_notice_data] = useState(\"\");\n  const [isChecked2, setIsChecked2] = useState(false);\n  const notice_db_data = useCallback(() => {\n    onValue(notice_db, (snapshot) => {\n      const data = snapshot.val();\n      console.log(data);\n      set_notice_data(data);\n      setIsChecked2(data == \"true\");\n    });\n  }, []);\n  useEffect(() => {\n    notice_db_data();\n  }, [notice_db_data]);\n\n  const checkedHandler2 = () => {\n    setIsChecked2(!isChecked2);\n    set(notice_db, !isChecked2 ? \"true\" : \"false\");\n    if (!isChecked2) {\n      subscribeTokenToTopic(token, \"notice\");\n    } else {\n      unsubscribeTokenToTopic(token, \"notice\");\n    }\n  };\n\n  function SettingPage() {\n    const logout = () => {\n      signOut(auth);\n    };\n    return (\n      <div className=\"container\">\n        <div className=\"box\">\n          <h2>계정정보</h2>\n          <p style={{ textAlign: \"left\" }}>이름: {name}</p>\n          <p style={{ textAlign: \"left\", marginBottom: \"70px\" }}>\n            이메일: {email}\n          </p>\n\n          <h2>알림 허용버튼</h2>\n          <label className=\"switch-button\" style={{ marginBottom: \"50px\" }}>\n            <input\n              checked={isChecked2}\n              onChange={checkedHandler2}\n              type=\"checkbox\"\n              id=\"on_off_btn\"\n            />\n            <span className=\"onoff-switch\"></span>\n          </label>\n\n          <h2>로그아웃하기</h2>\n\n          <button className=\"logout_btn\" onClick={logout}>\n            로그아웃하기\n          </button>\n          <nav className=\"menu\">\n            <ul>\n              <li>\n                <Link to=\"/dont-sick-react/checkPaper\">보건증</Link>\n              </li>\n              <li>\n                <Link to=\"/dont-sick-react/\">홈</Link>\n              </li>\n              <li>\n                <Link to=\"/dont-sick-react/setting\">설정</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <Route path=\"/dont-sick-react/\" exact component={HomePage} />\n      <Route path=\"/dont-sick-react/setting\" component={SettingPage} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}