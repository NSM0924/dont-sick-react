{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","auth","getAuth","messaging","getMessaging","useState","token","setToken","email","setEmail","name","setName","userId","setUserId","admin","setAdmin","useEffect","onAuthStateChanged","user","console","log","displayName","includes","substr","alert","signOut","navigator","serviceWorker","register","then","reg","getToken","serviceWorkerRegistration","vapidKey","currentToken","catch","err","error","provider","GoogleAuthProvider","setCustomParameters","login_hint","signInWithRedirect","onMessage","payload","Notification","permission","icon","body","data","message","unsubscribeTokenToTopic","topic","to","registration_tokens","fetch","method","headers","Headers","Authorization","JSON","stringify","response","status","Error","text","sendToTopic","msg","database","getDatabase","notice_db","ref","isChecked2","setIsChecked2","notice_db_data","useCallback","onValue","snapshot","val","subscribeTokenToTopic","set","checkPaper_db","getFirestore","style","display","justifyContent","alignItems","height","path","exact","component","on_off_db","on_off_data","set_on_off_data","isChecked","setIsChecked","on_off_db_data","className","src","alt","width","marginBottom","id","checked","onChange","type","logout","a","textAlign","onClick","idInput","setIdInput","gradeInput","setGradeInput","classInput","setClassInput","nameInput","setNameInput","timeInput","setTimeInput","symptomInput","setSymptomInput","date","Date","year","getFullYear","month","getMonth","slice","day","getDate","hour","getHours","fullDate","postDate","setDoc","doc","grade","classResult","time","symptom","title","value","e","target","placeholder","min","max","margin","checkPaper_data","setCheckPaper_data","checkPaper_db_data","postData","getDocs","collection","forEach","push","post","prevPosts","concat","map","nameResult","document","querySelector","getElementById","innerHTML","addEventListener","dataId","offClick","deleteData","deleteDoc","window","location","reload","getDoc","modalSnapshot","TypeError","modal","position","right","bottom","cursor","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.50a3d17f.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDugiSdAbhcAv4kjvZIczRILR0cWnyoLE4\",\n  authDomain: \"don-t-sick.firebaseapp.com\",\n  projectId: \"don-t-sick\",\n  storageBucket: \"don-t-sick.appspot.com\",\n  messagingSenderId: \"713607862724\",\n  appId: \"1:713607862724:web:5ada0cc3cdaa6370662c91\",\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\n","import \"./App.css\";\nimport {\n  getAuth,\n  signInWithRedirect,\n  GoogleAuthProvider,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { getDatabase, onValue, ref, set } from \"firebase/database\";\nimport {\n  collection,\n  deleteDoc,\n  doc,\n  getDoc,\n  getDocs,\n  getFirestore,\n  setDoc,\n} from \"firebase/firestore\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\nimport { app } from \"./firebase\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport \"./css/menu.css\";\nimport \"./css/SettingPage.css\";\nimport \"./css/HomePage.css\";\nimport \"./css/CheckPaperPage.css\";\nimport \"./css/modal.css\";\n\nfunction App() {\n  const auth = getAuth(app);\n  const messaging = getMessaging();\n  const [token, setToken] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [admin, setAdmin] = useState(false);\n\n  useEffect(() => {\n    // 로그인한 사용자 가져오기\u001c\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        console.log(user);\n        let email = user.email;\n        setEmail(email);\n        setName(user.displayName);\n        setUserId(\n          email.includes(\"sdh20\") ? email.substr(0, 11) : email.substr(0, 9)\n        );\n        // 학교 계정이 아니면 다시 로그인\n        if (!email.includes(\"@sdh.hs.kr\")) {\n          alert(\"학교계정으로만 로그인 가능합니다.\");\n          signOut(auth);\n          return;\n        }\n        if (email == \"sdh20200405@sdh.hs.kr\" || email == \"shinem@sdh.hs.kr\") {\n          setAdmin(true);\n        }\n\n        // 알림 토큰 저장\n        if (navigator.serviceWorker) {\n          navigator.serviceWorker\n            .register(\"/dont-sick-react/firebase-messaging-sw.js\")\n            .then(function (reg) {\n              console.log(\"서비스워커 등록성공 :\", reg);\n              getToken(messaging, {\n                serviceWorkerRegistration: reg,\n                vapidKey:\n                  \"BLnmZ7MoMERjyVHv4b791C7j1_-xqcVi9aCrVWDDFovZSGDgK9FROae3J8Q7AWqTJwbQDc2Dk4LrU0zAEUVqfVQ\",\n              })\n                .then((currentToken) => {\n                  if (currentToken) {\n                    console.log(currentToken);\n                    setToken(currentToken);\n                  } else {\n                    console.log(\n                      \"No registration token available. Request permission to generate one.\"\n                    );\n                    alert(\"알림 권한을 허용해주세요.\");\n                  }\n                })\n                .catch((err) => {\n                  console.log(\n                    \"An error occurred while retrieving token. \",\n                    err\n                  );\n                  alert(\"알림 권한을 허용해주세요.\");\n                });\n            })\n            .catch(function (error) {\n              console.log(\"서비스워커 등록실패 :\", error);\n            });\n        }\n      }\n      // 로그인이 안되어있으면 로그인 페이지로 이동\n      else {\n        const provider = new GoogleAuthProvider();\n\n        provider.setCustomParameters({\n          login_hint: \"sdh@sdh.hs.kr\",\n        });\n\n        signInWithRedirect(auth, provider);\n      }\n    });\n  }, [auth, messaging]);\n\n  // 포그라운드일 때 알림이 오면\n  onMessage(messaging, (payload) => {\n    console.log(\"Message received. \", payload);\n    if (Notification.permission !== \"granted\") {\n      alert(\"notification is disabled\");\n    } else {\n      var notification = new Notification(\"아프지말고\", {\n        icon: \"./images/logo.png\",\n        body: payload.data.message,\n      });\n    }\n  });\n\n  // 알림 받기 등록\n  const subscribeTokenToTopic = (token, topic) => {\n    fetch(`https://iid.googleapis.com/iid/v1/${token}/rel/topics/${topic}`, {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization:\n          \"key=AAAApiZX2cQ:APA91bGE4My7SUbJhjgtK66X8eADgEsxnBlebWlqIjfUw2YSxn43g3kZjH5mSIcHLdyH1Wfg0cwCWw8rv66tR_D2y3IyH3MCQf-9nfN4zH_SqyvqF-yOeVApflNV6bY_4SbwmgFzLKjp\",\n      }),\n    })\n      .then((response) => {\n        if (response.status < 200 || response.status >= 400) {\n          throw new Error(\n            `Error Subscribing to topic: ${\n              response.status\n            } - ${response.text()}`\n          );\n        }\n        console.log(`Subscribed to \"${topic}\"`);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  // 알림 받기 등록 취소\n  const unsubscribeTokenToTopic = (token, topic) => {\n    let body = {\n      to: `/topics/${topic}`,\n      registration_tokens: [token],\n    };\n    fetch(`https://iid.googleapis.com/iid/v1:batchRemove`, {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization:\n          \"key=AAAApiZX2cQ:APA91bGE4My7SUbJhjgtK66X8eADgEsxnBlebWlqIjfUw2YSxn43g3kZjH5mSIcHLdyH1Wfg0cwCWw8rv66tR_D2y3IyH3MCQf-9nfN4zH_SqyvqF-yOeVApflNV6bY_4SbwmgFzLKjp\",\n        \"Content-Type\": \"application/json\",\n      }),\n      body: JSON.stringify(body),\n    })\n      .then((response) => {\n        if (response.status < 200 || response.status >= 400) {\n          throw new Error(\n            `Error Unsubscribing to topic: ${\n              response.status\n            } - ${response.text()}`\n          );\n        }\n        console.log(`Unsubscribed to \"${topic}\"`);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  // 알림 받기에 등록한 사람들에게 알림 보내기\n  const sendToTopic = (msg, topic) => {\n    fetch(`https://fcm.googleapis.com/fcm/send`, {\n      method: \"POST\",\n      headers: new Headers({\n        Authorization:\n          \"key=AAAApiZX2cQ:APA91bGE4My7SUbJhjgtK66X8eADgEsxnBlebWlqIjfUw2YSxn43g3kZjH5mSIcHLdyH1Wfg0cwCWw8rv66tR_D2y3IyH3MCQf-9nfN4zH_SqyvqF-yOeVApflNV6bY_4SbwmgFzLKjp\",\n        \"Content-Type\": \"application/json\",\n      }),\n      body: JSON.stringify({\n        data: msg,\n        to: `/topics/${topic}`,\n      }),\n    })\n      .then((response) => {\n        if (response.status < 200 || response.status >= 400) {\n          throw new Error(`Error ${response.status} - ${response.text()}`);\n        }\n        console.log(\"Success\");\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  const database = getDatabase();\n  let notice_db = ref(database, `user/${userId}/notice`);\n  const [isChecked2, setIsChecked2] = useState(false);\n  const notice_db_data = useCallback(() => {\n    onValue(notice_db, (snapshot) => {\n      const data = snapshot.val();\n      console.log(data);\n      if (!data) {\n        set(notice_db, \"true\");\n      } else {\n        setIsChecked2(data == \"true\");\n        if (data == \"true\") {\n          subscribeTokenToTopic(token, \"notice\");\n        } else {\n          unsubscribeTokenToTopic(token, \"notice\");\n        }\n      }\n    });\n  }, [notice_db]);\n  useEffect(() => {\n    if (!userId == \"\") {\n      notice_db_data();\n    }\n  }, [notice_db_data]);\n\n  function HomePage() {\n    let on_off_db = ref(database, \"on_off\");\n    const [on_off_data, set_on_off_data] = useState(\"\");\n    const [isChecked, setIsChecked] = useState(false);\n    const on_off_db_data = useCallback(() => {\n      onValue(on_off_db, (snapshot) => {\n        const data = snapshot.val();\n        console.log(data);\n        set_on_off_data(data);\n        setIsChecked(data == \"ON\");\n      });\n    }, [on_off_db]);\n    useEffect(() => {\n      on_off_db_data();\n    }, [on_off_db_data]);\n\n    const checkedHandler = () => {\n      setIsChecked(!isChecked);\n      set(on_off_db, !isChecked ? \"ON\" : \"OFF\");\n      if (!isChecked) {\n        sendToTopic({ message: \"보건실 ON🟢\" }, \"notice\");\n      } else {\n        sendToTopic({ message: \"보건실 OFF🔴\" }, \"notice\");\n      }\n    };\n\n    return (\n      <div>\n        <nav className=\"menu\">\n          <ul>\n            <li>\n              <Link to=\"/dont-sick-react/checkPaper\">보건증</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/\">홈</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/setting\">설정</Link>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container\">\n          <div className=\"box\">\n            <img src=\"images/logo.png\" alt=\"logo\" />\n            <hr style={{ width: \"100%\", marginBottom: \"50px\" }} />\n            <div className={`curcle ${on_off_data}`}></div>\n            <h2 id=\"text\" style={{ marginBottom: \"70px\" }}>\n              보건실 현재 {on_off_data}\n            </h2>\n            {admin ? (\n              <label className=\"switch-button\" style={{ marginBottom: \"50px\" }}>\n                <input\n                  checked={isChecked}\n                  onChange={checkedHandler}\n                  type=\"checkbox\"\n                  id=\"on_off_btn\"\n                />\n                <span className=\"onoff-switch\"></span>\n              </label>\n            ) : (\n              <div></div>\n            )}\n            <p>\n              코로나 의심증상: 발열, 권태감, 기침, 호흡곤란 및 폐렴 등 나타남.\n              <br />그 외 가래, 인후통, 두통, 객혈과 오심, 설사 등도 나타남.\n            </p>\n            <h2 style={{ marginBottom: \"50px\" }}>질병관리청 콜센터 1399</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function SettingPage() {\n    const checkedHandler2 = () => {\n      setIsChecked2(!isChecked2);\n      set(notice_db, !isChecked2 ? \"true\" : \"false\");\n      // if (!isChecked2) {\n      //   subscribeTokenToTopic(token, \"notice\");\n      // } else {\n      //   unsubscribeTokenToTopic(token, \"notice\");\n      // }\n    };\n\n    const logout = async () => {\n      await unsubscribeTokenToTopic(token, \"notice\");\n      signOut(auth);\n    };\n    return (\n      <div className=\"container\">\n        <div className=\"box\">\n          <h2>계정정보</h2>\n          <p style={{ textAlign: \"left\" }}>이름: {name}</p>\n          <p style={{ textAlign: \"left\", marginBottom: \"70px\" }}>\n            이메일: {email}\n          </p>\n\n          <h2>알림 허용버튼</h2>\n          <label className=\"switch-button\" style={{ marginBottom: \"50px\" }}>\n            <input\n              checked={isChecked2}\n              onChange={checkedHandler2}\n              type=\"checkbox\"\n              id=\"on_off_btn\"\n            />\n            <span className=\"onoff-switch\"></span>\n          </label>\n\n          <h2>로그아웃하기</h2>\n\n          <button className=\"logout_btn\" onClick={logout}>\n            로그아웃하기\n          </button>\n          <nav className=\"menu\">\n            <ul>\n              <li>\n                <Link to=\"/dont-sick-react/checkPaper\">보건증</Link>\n              </li>\n              <li>\n                <Link to=\"/dont-sick-react/\">홈</Link>\n              </li>\n              <li>\n                <Link to=\"/dont-sick-react/setting\">설정</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    );\n  }\n\n  const checkPaper_db = getFirestore();\n  function CheckPaperPage() {\n    const [checkPaper_data, setCheckPaper_data] = useState([]);\n    const checkPaper_db_data = useCallback(async () => {\n      let postData = [];\n      try {\n        const querySnapshot = await getDocs(collection(checkPaper_db, userId));\n        querySnapshot.forEach((doc) => {\n          console.log(`${doc.id} => ${doc.data()}`);\n          postData.push({ post: doc.data(), id: doc.id });\n        });\n        setCheckPaper_data((prevPosts) => prevPosts.concat(postData));\n      } catch {}\n    }, [checkPaper_db]);\n    useEffect(() => {\n      checkPaper_db_data();\n    }, [checkPaper_db_data]);\n\n    function modal(grade, classResult, nameResult, time, symptom, date) {\n      document.querySelector(\".modal_wrap\").style.display = \"flex\";\n      document.querySelector(\".black_bg\").style.display = \"block\";\n      document.getElementById(\n        \"modal_text\"\n      ).innerHTML = `<p>${grade}학년 ${classResult}반 ${nameResult}</p>\n      <p>위 학생은 보건실에 ${time} ${symptom} 증상으로 다녀감을 확인 합니다.</p>\n      <p>${date}</p><p>보건교사 문서현</p>`;\n      function offClick() {\n        document.querySelector(\".modal_wrap\").style.display = \"none\";\n        document.querySelector(\".black_bg\").style.display = \"none\";\n      }\n      document\n        .querySelector(\".modal_close\")\n        .addEventListener(\"click\", offClick);\n    }\n\n    return (\n      <div>\n        <nav className=\"menu\">\n          <ul>\n            <li>\n              <Link to=\"/dont-sick-react/checkPaper\">보건증</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/\">홈</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/setting\">설정</Link>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container\">\n          <div className=\"box\">\n            <img src=\"./images/logo.png\" alt=\"\" />\n            <hr style={{ width: \"100%\", marginBottom: \"50px\" }} />\n            <h2 style={{ marginBottom: \"30px\" }}>보건실입실확인증</h2>\n            <ul className=\"mylist\">\n              {checkPaper_data.map((post) => (\n                <li\n                  key={post.id}\n                  onClick={() => {\n                    modal(\n                      post.post.grade,\n                      post.post.classResult,\n                      post.post.name,\n                      post.post.time,\n                      post.post.symptom,\n                      post.post.date\n                    );\n                  }}\n                >\n                  {post.id}\n                </li>\n              ))}\n            </ul>\n            <div className=\"black_bg\"></div>\n            <div className=\"modal_wrap\">\n              <div className=\"modal_close\"></div>\n              <div id=\"modal_text\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function AdminCheckPaperPage() {\n    const [idInput, setIdInput] = useState(\"\");\n    const [gradeInput, setGradeInput] = useState(\"\");\n    const [classInput, setClassInput] = useState(\"\");\n    const [nameInput, setNameInput] = useState(\"\");\n    const [timeInput, setTimeInput] = useState(\"\");\n    const [symptomInput, setSymptomInput] = useState(\"\");\n    async function postCheckPaper() {\n      if (\n        idInput == \"\" ||\n        gradeInput == \"\" ||\n        classInput == \"\" ||\n        nameInput == \"\" ||\n        timeInput == \"\" ||\n        symptomInput == \"\"\n      ) {\n        alert(\"빈탄을 모두 채워주세요.\");\n      } else {\n        let date = new Date();\n        let year = date.getFullYear();\n        let month = (\"0\" + (1 + date.getMonth())).slice(-2);\n        let day = (\"0\" + date.getDate()).slice(-2);\n        let hour = date.getHours();\n\n        let fullDate = year + \"-\" + month + \"-\" + day + \"-\" + hour;\n        let postDate = year + \"년 \" + month + \"월 \" + day + \"일\";\n        await setDoc(doc(checkPaper_db, idInput, fullDate), {\n          id: idInput,\n          grade: gradeInput,\n          classResult: classInput,\n          name: nameInput,\n          time: timeInput,\n          symptom: symptomInput,\n          date: postDate,\n        }).then(async () => {\n          await setDoc(\n            doc(\n              checkPaper_db,\n              \"check_paper\",\n              fullDate + `_${gradeInput}-${classInput}_${nameInput}`\n            ),\n            {\n              id: idInput,\n              title: fullDate,\n            }\n          ).then(() => {\n            setIdInput(\"\");\n            setGradeInput(\"\");\n            setClassInput(\"\");\n            setNameInput(\"\");\n            setTimeInput(\"\");\n            setSymptomInput(\"\");\n            console.log(\"성공\");\n          });\n        });\n      }\n    }\n    // const [checkPaper_data, setCheckPaper_data] = useState([]);\n    // const checkPaper_db = getFirestore();\n    // const checkPaper_db_data = useCallback(async () => {\n    //   let postData = [];\n    //   try {\n    //     const querySnapshot = await getDocs(collection(checkPaper_db, userId));\n    //     querySnapshot.forEach((doc) => {\n    //       console.log(`${doc.id} => ${doc.data()}`);\n    //       postData.push({ post: doc.data(), id: doc.id });\n    //     });\n    //     setCheckPaper_data((prevPosts) => prevPosts.concat(postData));\n    //   } catch {}\n    // }, [checkPaper_db]);\n    // useEffect(() => {\n    //   checkPaper_db_data();\n    // }, [checkPaper_db_data]);\n\n    // function modal(grade, classResult, nameResult, time, symptom, date) {\n    //   document.querySelector(\".modal_wrap\").style.display = \"flex\";\n    //   document.querySelector(\".black_bg\").style.display = \"block\";\n    //   document.getElementById(\n    //     \"modal_text\"\n    //   ).innerHTML = `<p>${grade}학년 ${classResult}반 ${nameResult}</p>\n    //   <p>위 학생은 보건실에 ${time} ${symptom} 증상으로 다녀감을 확인 합니다.</p>\n    //   <p>${date}</p><p>보건교사 문서현</p>`;\n    //   function offClick() {\n    //     document.querySelector(\".modal_wrap\").style.display = \"none\";\n    //     document.querySelector(\".black_bg\").style.display = \"none\";\n    //   }\n    //   document\n    //     .querySelector(\".modal_close\")\n    //     .addEventListener(\"click\", offClick);\n    // }\n\n    return (\n      <div>\n        <nav className=\"menu\">\n          <ul>\n            <li>\n              <Link to=\"/dont-sick-react/checkPaper\">보건증</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/\">홈</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/setting\">설정</Link>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container\">\n          <div className=\"box\">\n            <img src=\"./images/logo.png\" alt=\"\" />\n            <hr style={{ width: \"100%\", marginBottom: \"50px\" }} />\n            <h2 style={{ marginBottom: \"30px\" }}>보건실입실확인증</h2>\n            <div>\n              학생ID{\" \"}\n              <input\n                value={idInput}\n                onChange={(e) => {\n                  setIdInput(e.target.value);\n                }}\n                type=\"text\"\n                placeholder=\"ex) sdh20200405\"\n              />\n            </div>\n            <div>\n              학년{\" \"}\n              <input\n                onChange={(e) => {\n                  setGradeInput(e.target.value);\n                }}\n                value={gradeInput}\n                type=\"number\"\n                min=\"1\"\n                max=\"3\"\n              />\n            </div>\n            <div>\n              반{\" \"}\n              <input\n                onChange={(e) => {\n                  setClassInput(e.target.value);\n                }}\n                value={classInput}\n                type=\"number\"\n                min=\"1\"\n                max=\"4\"\n              />\n            </div>\n            <div>\n              이름{\" \"}\n              <input\n                onChange={(e) => {\n                  setNameInput(e.target.value);\n                }}\n                value={nameInput}\n                type=\"text\"\n              />\n            </div>\n            <div>\n              시간{\" \"}\n              <input\n                onChange={(e) => {\n                  setTimeInput(e.target.value);\n                }}\n                value={timeInput}\n                type=\"text\"\n                placeholder=\"ex) 1교시 / 9시30분\"\n              />\n            </div>\n            <div>\n              증상{\" \"}\n              <input\n                onChange={(e) => {\n                  setSymptomInput(e.target.value);\n                }}\n                value={symptomInput}\n                type=\"text\"\n              />\n            </div>\n            <button\n              style={{ margin: \"10px 0\" }}\n              onClick={postCheckPaper}\n              className=\"submitBtn\"\n            >\n              작성\n            </button>\n            <Link to=\"/dont-sick-react/delete\">\n              <button className=\"submitBtn\">삭제</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function DeleteCheckPaperPage() {\n    const [checkPaper_data, setCheckPaper_data] = useState([]);\n    const checkPaper_db_data = useCallback(async () => {\n      let postData = [];\n      try {\n        const querySnapshot = await getDocs(\n          collection(checkPaper_db, \"check_paper\")\n        );\n        querySnapshot.forEach((doc) => {\n          console.log(`${doc.id} => ${doc.data()}`);\n          postData.push({\n            title: doc.data().title,\n            id: doc.data().id,\n            dataId: doc.id,\n          });\n        });\n        setCheckPaper_data((prevPosts) => prevPosts.concat(postData));\n      } catch {}\n    }, [checkPaper_db]);\n    useEffect(() => {\n      checkPaper_db_data();\n    }, [checkPaper_db_data]);\n\n    async function modal(id, title, dataId) {\n      document.querySelector(\".modal_wrap\").style.display = \"flex\";\n      document.querySelector(\".black_bg\").style.display = \"block\";\n      const modalSnapshot = await getDoc(doc(checkPaper_db, id, title));\n      try {\n        document.getElementById(\"modal_text\").innerHTML = `<p>${\n          modalSnapshot.data().grade\n        }학년 ${modalSnapshot.data().classResult}반 ${\n          modalSnapshot.data().name\n        }</p>\n          <p>위 학생은 보건실에 ${modalSnapshot.data().time} ${\n          modalSnapshot.data().symptom\n        } 증상으로 다녀감을 확인 합니다.</p>\n          <p>${modalSnapshot.data().date}</p><p>보건교사 문서현</p>`;\n      } catch (e) {\n        if (e instanceof TypeError) {\n          alert(\"학생ID 오류\");\n        }\n      }\n      function offClick() {\n        document.querySelector(\".modal_wrap\").style.display = \"none\";\n        document.querySelector(\".black_bg\").style.display = \"none\";\n      }\n      async function deleteData(id, title, dataId) {\n        try {\n          await deleteDoc(doc(checkPaper_db, id, title));\n          await deleteDoc(doc(checkPaper_db, \"check_paper\", dataId)).then(\n            () => {\n              window.location.reload();\n            }\n          );\n        } catch {\n          console.log(\"실패\");\n        }\n      }\n      document\n        .querySelector(\".modal_close\")\n        .addEventListener(\"click\", offClick);\n      document.getElementById(\"deleteBtn\").addEventListener(\"clcik\", () => {\n        deleteData(id, title, dataId);\n      });\n    }\n\n    return (\n      <div>\n        <nav className=\"menu\">\n          <ul>\n            <li>\n              <Link to=\"/dont-sick-react/checkPaper\">보건증</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/\">홈</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/setting\">설정</Link>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container\">\n          <div className=\"box\">\n            <img src=\"./images/logo.png\" alt=\"\" />\n            <hr style={{ width: \"100%\", marginBottom: \"50px\" }} />\n            <h2 style={{ marginBottom: \"30px\" }}>보건실입실확인증</h2>\n            <ul className=\"mylist\">\n              {checkPaper_data.map((post) => (\n                <li\n                  key={post.dataId}\n                  onClick={() => {\n                    modal(post.id, post.title, post.dataId);\n                  }}\n                >\n                  {post.dataId}\n                </li>\n              ))}\n            </ul>\n            <div className=\"black_bg\"></div>\n            <div className=\"modal_wrap\">\n              <div className=\"modal_close\"></div>\n              <div id=\"modal_text\"></div>\n              <div\n                id=\"deleteBtn\"\n                style={{\n                  position: \"absolute\",\n                  right: \"10px\",\n                  bottom: \"10px\",\n                  cursor: \"pointer\",\n                }}\n              >\n                삭제\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <Route path=\"/dont-sick-react/\" exact component={HomePage} />\n      <Route path=\"/dont-sick-react/setting\" component={SettingPage} />\n      <Route\n        path=\"/dont-sick-react/checkpaper\"\n        component={admin ? AdminCheckPaperPage : CheckPaperPage}\n      />\n      {admin ? (\n        <Route\n          path=\"/dont-sick-react/delete\"\n          component={DeleteCheckPaperPage}\n        />\n      ) : (\n        () => {\n          window.location.href = \"/dont-sick-react/\";\n        }\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}