{"version":3,"sources":["firebase.js","page/LoginPage.js","page/HomePage.js","page/SettingPage.js","App.js","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","LoginPage","className","src","alt","type","HomePage","to","style","width","marginBottom","class","id","SettingPage","textAlign","App","display","justifyContent","alignItems","height","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAgBmBA,YAVI,CACrBC,OAAQ,0CACRC,WAAY,6BACZC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,8C,sBCEMC,MAXf,WACE,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAKC,IAAI,kBAAkBC,IAAI,SAC/B,wBAAQC,KAAK,SAASH,UAAU,YAAhC,iD,oBCqCSI,MAvCf,WACE,OACE,gCACE,qBAAKJ,UAAU,OAAf,SACE,+BACE,6BACE,cAAC,IAAD,CAAMK,GAAG,8BAAT,kCAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,oBAAT,sBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,2BAAT,iCAIN,qBAAKL,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKC,IAAI,kBAAkBC,IAAI,SAC/B,oBAAII,MAAO,CAAEC,MAAO,OAAQC,aAAc,UAC1C,qBAAKC,MAAM,WACX,oBAAIC,GAAG,OAAOJ,MAAO,CAAEE,aAAc,QAArC,6EAGA,wBAAOR,UAAU,gBAAgBM,MAAO,CAAEE,aAAc,QAAxD,UACE,uBAAOL,KAAK,WAAWO,GAAG,eAC1B,sBAAMV,UAAU,oBAElB,qMAEE,uBAFF,kJAIA,oBAAIM,MAAO,CAAEE,aAAc,QAA3B,6E,MCKKG,MArCf,WACE,OACE,qBAAKX,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,0DACA,mBAAGM,MAAO,CAAEM,UAAW,QAAvB,8CACA,mBAAGN,MAAO,CAAEM,UAAW,OAAQJ,aAAc,QAA7C,uDAIA,uEACA,wBAAOR,UAAU,gBAAgBM,MAAO,CAAEE,aAAc,QAAxD,UACE,uBAAOL,KAAK,WAAWO,GAAG,eAC1B,sBAAMV,UAAU,oBAGlB,sEAEA,wBAAQA,UAAU,aAAlB,kDACA,qBAAKA,UAAU,OAAf,SACE,+BACE,6BACE,cAAC,IAAD,CAAMK,GAAG,8BAAT,kCAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,oBAAT,sBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,2BAAT,uCC2KCQ,MA5Lf,WA4KE,OACE,sBACEP,MAAO,CACLQ,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,SALZ,UAQE,cAAC,IAAD,CAAOC,KAAK,oBAAoBC,OAAK,EAACC,UAAWhB,IACjD,cAAC,IAAD,CAAOc,KAAK,yBAAyBC,OAAK,EAACC,UAAWrB,IACtD,cAAC,IAAD,CAAOmB,KAAK,2BAA2BC,OAAK,EAACC,UAAWT,QC3L/CU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2a58de56.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDugiSdAbhcAv4kjvZIczRILR0cWnyoLE4\",\n  authDomain: \"don-t-sick.firebaseapp.com\",\n  projectId: \"don-t-sick\",\n  storageBucket: \"don-t-sick.appspot.com\",\n  messagingSenderId: \"713607862724\",\n  appId: \"1:713607862724:web:5ada0cc3cdaa6370662c91\",\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\n","import React from \"react\";\nimport \"../css/LoginPage.css\";\n\nfunction LoginPage() {\n  return (\n    <div className=\"content\">\n      <img src=\"images/logo.png\" alt=\"logo\" />\n      <button type=\"submit\" className=\"submitBtn\">\n        구글 로그인\n      </button>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/menu.css\";\nimport \"../css/HomePage.css\";\n\nfunction HomePage() {\n  return (\n    <div>\n      <nav className=\"menu\">\n        <ul>\n          <li>\n            <Link to=\"/dont-sick-react/checkPaper\">보건증</Link>\n          </li>\n          <li>\n            <Link to=\"/dont-sick-react/\">홈</Link>\n          </li>\n          <li>\n            <Link to=\"/dont-sick-react/setting\">설정</Link>\n          </li>\n        </ul>\n      </nav>\n      <div className=\"container\">\n        <div className=\"box\">\n          <img src=\"images/logo.png\" alt=\"logo\" />\n          <hr style={{ width: \"100%\", marginBottom: \"50px\" }} />\n          <div class=\"curcle\"></div>\n          <h2 id=\"text\" style={{ marginBottom: \"70px\" }}>\n            보건실 현재 온-오프라인\n          </h2>\n          <label className=\"switch-button\" style={{ marginBottom: \"50px\" }}>\n            <input type=\"checkbox\" id=\"on_off_btn\" />\n            <span className=\"onoff-switch\"></span>\n          </label>\n          <p>\n            코로나 의심증상: 발열, 권태감, 기침, 호흡곤란 및 폐렴 등 나타남.\n            <br />그 외 가래, 인후통, 두통, 객혈과 오심, 설사 등도 나타남.\n          </p>\n          <h2 style={{ marginBottom: \"50px\" }}>질병관리청 콜센터 1399</h2>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../css/menu.css\";\nimport \"../css/SettingPage.css\";\n\nfunction SettingPage() {\n  return (\n    <div className=\"container\">\n      <div className=\"box\">\n        <h2>계정정보</h2>\n        <p style={{ textAlign: \"left\" }}>이름: 홍길동</p>\n        <p style={{ textAlign: \"left\", marginBottom: \"70px\" }}>\n          이메일: sdh00000000@sdh.hs.kr\n        </p>\n\n        <h2>알림 허용버튼</h2>\n        <label className=\"switch-button\" style={{ marginBottom: \"50px\" }}>\n          <input type=\"checkbox\" id=\"on_off_btn\" />\n          <span className=\"onoff-switch\"></span>\n        </label>\n\n        <h2>로그아웃하기</h2>\n\n        <button className=\"logout_btn\">로그아웃하기</button>\n        <nav className=\"menu\">\n          <ul>\n            <li>\n              <Link to=\"/dont-sick-react/checkPaper\">보건증</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/\">홈</Link>\n            </li>\n            <li>\n              <Link to=\"/dont-sick-react/setting\">설정</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default SettingPage;\n","import \"./App.css\";\nimport {\n  getAuth,\n  signInWithRedirect,\n  GoogleAuthProvider,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { getMessaging, getToken, onMessage } from \"firebase/messaging\";\nimport { app } from \"./firebase\";\nimport { useEffect, useState } from \"react\";\nimport { Route } from \"react-router\";\nimport LoginPage from \"./page/LoginPage\";\nimport HomePage from \"./page/HomePage\";\nimport SettingPage from \"./page/SettingPage\";\n\nfunction App() {\n  // const auth = getAuth(app);\n  // const messaging = getMessaging();\n  // const [name, setName] = useState(\"\");\n  // const [token, setToken] = useState(\"\");\n\n  // useEffect(() => {\n  //   // 로그인한 사용자 가져오기\u001c\n  //   onAuthStateChanged(auth, (user) => {\n  //     if (user) {\n  //       console.log(user);\n  //       let email = user.email;\n  //       // 학교 계정이 아니면 다시 로그인\n  //       if (!email.includes(\"@sdh.hs.kr\")) {\n  //         alert(\"학교계정으로만 로그인 가능합니다.\");\n  //         signOut(auth);\n  //         return;\n  //       }\n  //       setName(user.displayName);\n\n  //       // 알림 토큰 저장\n  //       if (navigator.serviceWorker) {\n  //         navigator.serviceWorker\n  //           .register(\"/dont-sick-react/firebase-messaging-sw.js\")\n  //           .then(function (reg) {\n  //             console.log(\"서비스워커 등록성공 :\", reg);\n  //             getToken(messaging, {\n  //               serviceWorkerRegistration: reg,\n  //               vapidKey:\n  //                 \"BLnmZ7MoMERjyVHv4b791C7j1_-xqcVi9aCrVWDDFovZSGDgK9FROae3J8Q7AWqTJwbQDc2Dk4LrU0zAEUVqfVQ\",\n  //             })\n  //               .then((currentToken) => {\n  //                 if (currentToken) {\n  //                   console.log(currentToken);\n  //                   setToken(currentToken);\n  //                 } else {\n  //                   console.log(\n  //                     \"No registration token available. Request permission to generate one.\"\n  //                   );\n  //                   alert(\"알림 권한을 허용해주세요.\");\n  //                 }\n  //               })\n  //               .catch((err) => {\n  //                 console.log(\n  //                   \"An error occurred while retrieving token. \",\n  //                   err\n  //                 );\n  //                 alert(\"알림 권한을 허용해주세요.\");\n  //               });\n  //           })\n  //           .catch(function (error) {\n  //             console.log(\"서비스워커 등록실패 :\", error);\n  //           });\n  //       }\n  //     }\n  //     // 로그인이 안되어있으면 로그인 페이지로 이동\n  //     else {\n  //       const provider = new GoogleAuthProvider();\n\n  //       provider.setCustomParameters({\n  //         login_hint: \"sdh@sdh.hs.kr\",\n  //       });\n\n  //       signInWithRedirect(auth, provider);\n  //     }\n  //   });\n  // }, [auth]);\n\n  // const logout = () => {\n  //   signOut(auth);\n  // };\n\n  // // 포그라운드일 때 알림이 오면\n  // onMessage(messaging, (payload) => {\n  //   console.log(\"Message received. \", payload);\n  //   if (Notification.permission !== \"granted\") {\n  //     alert(\"notification is disabled\");\n  //   } else {\n  //     var notification = new Notification(\"아프지말고\", {\n  //       icon: \"./images/logo.png\",\n  //       body: payload.data.message,\n  //     });\n\n  //     // notification.onclick = function () {\n  //     //     window.open('http://google.com');\n  //     // };\n  //   }\n  // });\n\n  // // 알림 받기 등록\n  // const subscribeTokenToTopic = (token, topic) => {\n  //   fetch(`https://iid.googleapis.com/iid/v1/${token}/rel/topics/${topic}`, {\n  //     method: \"POST\",\n  //     headers: new Headers({\n  //       Authorization:\n  //         \"key=AAAApiZX2cQ:APA91bGE4My7SUbJhjgtK66X8eADgEsxnBlebWlqIjfUw2YSxn43g3kZjH5mSIcHLdyH1Wfg0cwCWw8rv66tR_D2y3IyH3MCQf-9nfN4zH_SqyvqF-yOeVApflNV6bY_4SbwmgFzLKjp\",\n  //     }),\n  //   })\n  //     .then((response) => {\n  //       if (response.status < 200 || response.status >= 400) {\n  //         throw new Error(\n  //           `Error Subscribing to topic: ${\n  //             response.status\n  //           } - ${response.text()}`\n  //         );\n  //       }\n  //       console.log(`Subscribed to \"${topic}\"`);\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // };\n\n  // // 알림 받기 등록 취소\n  // const unsubscribeTokenToTopic = (token, topic) => {\n  //   let body = {\n  //     to: `/topics/${topic}`,\n  //     registration_tokens: [token],\n  //   };\n  //   fetch(`https://iid.googleapis.com/iid/v1:batchRemove`, {\n  //     method: \"POST\",\n  //     headers: new Headers({\n  //       Authorization:\n  //         \"key=AAAApiZX2cQ:APA91bGE4My7SUbJhjgtK66X8eADgEsxnBlebWlqIjfUw2YSxn43g3kZjH5mSIcHLdyH1Wfg0cwCWw8rv66tR_D2y3IyH3MCQf-9nfN4zH_SqyvqF-yOeVApflNV6bY_4SbwmgFzLKjp\",\n  //       \"Content-Type\": \"application/json\",\n  //     }),\n  //     body: JSON.stringify(body),\n  //   })\n  //     .then((response) => {\n  //       if (response.status < 200 || response.status >= 400) {\n  //         throw new Error(\n  //           `Error Unsubscribing to topic: ${\n  //             response.status\n  //           } - ${response.text()}`\n  //         );\n  //       }\n  //       console.log(`Unsubscribed to \"${topic}\"`);\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // };\n\n  // // 알림 받기에 등록한 사람들에게 알림 보내기\n  // const sendToTopic = (msg, topic) => {\n  //   let body = {\n  //     to: `/topics/${topic}`,\n  //     data: msg,\n  //   };\n  //   fetch(`https://fcm.googleapis.com/fcm/send`, {\n  //     method: \"POST\",\n  //     headers: new Headers({\n  //       Authorization:\n  //         \"key=AAAApiZX2cQ:APA91bGE4My7SUbJhjgtK66X8eADgEsxnBlebWlqIjfUw2YSxn43g3kZjH5mSIcHLdyH1Wfg0cwCWw8rv66tR_D2y3IyH3MCQf-9nfN4zH_SqyvqF-yOeVApflNV6bY_4SbwmgFzLKjp\",\n  //       \"Content-Type\": \"application/json\",\n  //     }),\n  //     body: JSON.stringify({\n  //       data: msg,\n  //       to: `/topics/${topic}`,\n  //     }),\n  //   })\n  //     .then((response) => {\n  //       if (response.status < 200 || response.status >= 400) {\n  //         throw new Error(`Error ${response.status} - ${response.text()}`);\n  //       }\n  //       console.log(\"Success\");\n  //     })\n  //     .catch((error) => {\n  //       console.error(error);\n  //     });\n  // };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <Route path=\"/dont-sick-react/\" exact component={HomePage} />\n      <Route path=\"/dont-sick-react/login\" exact component={LoginPage} />\n      <Route path=\"/dont-sick-react/setting\" exact component={SettingPage} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}